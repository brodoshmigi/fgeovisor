version: '3.8'

services:
  db:
    image: postgis/postgis:16-3.5
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: h_123
      POSTGRES_DB: fgeovisor
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    # profiles: ["default", "test"]

  django:
    build:
      context: .
      dockerfile: fgeovisor/Dockerfile
    restart: on-failure
    environment:
      DEBUG: true
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: f_123
      POSTGRES_DB_NAME: fgeovisor
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      ALLOWED_HOSTS: localhost, 127.0.0.1
    volumes:
      - .:/usr/src/app/
      - media_files:/usr/src/app/fgeovisor/images/IMAGES
    ports:
      - 8000:8000
    networks:
      - backend
    develop:
      watch:
        - action: sync
          path: ./fgeovisor
          target: /usr/src/app
          ignore:
            - ./fgeovisor/images/IMAGES/
    depends_on:
      db:
        condition: service_healthy
    # profiles: ["default", "test"]

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    environment:
    - DJANGO_PORT=8000
    networks:
      - backend
    depends_on:
      - django
    # volumes:
    #   - ./ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
    #   - ./ssl/nginx.key:/etc/nginx/ssl/nginx.key
    # profiles: ["default", "test"]

networks:
  backend:

volumes:
  postgres_data:
  media_files: